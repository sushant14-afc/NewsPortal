@page "/News"
@rendermode InteractiveServer
@using NewsPortal.Application
@using NewsPortal.Entity
@inject IWebHostEnvironment _webhost
@inject HttpClient _http
@using System.Text.Json
@inject AppState AppState
@inject NavigationManager Navigation


@* <h3 class="text-center">Latest News</h3>*@
 <marquee class="text-danger fw-bold">📰 Latest News: Stay updated with the latest articles and updates here!</marquee>

@if (isLoading)
{
	<span>
		<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
		Loading...
	</span>
}
else if (newsList != null && newsList.Count > 0)
{
	@foreach (var news in PaginatedNews)
	{
		<div class="container">
			<div class="card mt-4 mx-auto" style="width: 65rem;">
				<img class="card-img-top" src="@news.ImageUrl" alt="Card image cap" style="height: 550px; object-fit: cover;">
				<div class="card-body">
					<h4 class="card-title"><b>@news.Title</b></h4>
					<p class="card-text">@news.Description</p>
					<h5 class="card-title">Category: <i><b>@news.Category</b></i></h5>

					@if (AppState.IsLoggedIn)
					{
						<a class="btn btn-success" href="/edit/@news.Id">Edit</a>

						<a class="btn btn-danger ms-3" @onclick="() => Delete(news.Id)">
							@if (isDeleting)
							{
								<span>
									<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
									Deleting...
								</span>
							}
							else
							{
								<span>Delete</span>
							}
						</a>
					}
					
				</div>	
			</div>
		</div>
	}

	<div class="text-center mt-4">
		<button class="btn btn-secondary me-2" @onclick="@(() => GoToPage(currentPage - 1))" disabled="@(currentPage == 1)">Previous</button>
		<span>Page @currentPage of @TotalPages</span>
		<button class="btn btn-secondary ms-2" @onclick="@(() => GoToPage(currentPage + 1))" disabled="@(currentPage == TotalPages)">Next</button>
	</div>
}
else
{
	<p class="text-muted">No news available.</p>
}
@* @if(newsList ==  null && isLoading)
{
	<span>
		<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
		Loading........
	</span>
}
else
{
	@foreach (var news in PaginatedNews)
	{
		<div class="container">
			<div class="card mt-4 mx-auto" style="width: 65rem;">
				<img class="card-img-top" src="@news.ImageUrl" alt="Card image cap" style="height: 550px; object-fit: cover;">
				<div class="card-body">
					<h4 class="card-title"><b>@news.Title</b></h4>
					<p class="card-text">@news.Description</p>
					<h5 class="card-title">Category: <i><b>@news.Category</b></i></h5>
				</div>
			</div>
		</div>
	}

	<div class="text-center mt-4">
		<button class="btn btn-secondary me-2" @onclick="@(() => GoToPage(currentPage - 1))" disabled="@(currentPage == 1)">Previous</button>
		<span>Page @currentPage of @TotalPages</span>
		<button class="btn btn-secondary ms-2" @onclick="@(() => GoToPage(currentPage + 1))" disabled="@(currentPage == TotalPages)">Next</button>
	</div>
}


 *@


@code {
	private List<NewsEntity> newsList;

	private bool isLoading = false;
	private bool isDeleting = false;

	private int currentPage = 1;
	private int pageSize = 3;

	private IEnumerable<NewsEntity> PaginatedNews =>
		newsList?.Skip((currentPage - 1) * pageSize).Take(pageSize) ?? Enumerable.Empty<NewsEntity>();

	private int TotalPages => (int)Math.Ceiling((double)(newsList?.Count ?? 0) / pageSize);

	private void GoToPage(int page)
	{
		if (page >= 1 && page <= TotalPages)
		{
			currentPage = page;
		}
	}

	protected override async Task OnInitializedAsync()
	{
		isLoading = true;
		await Task.Delay(1000);
		newsList = await _http.GetFromJsonAsync<List<NewsEntity>>("api/News/all_news");
		isLoading = false;


	}

	private async Task Delete(int id)
	{
		isDeleting = true;
		var response = await _http.DeleteAsync($"api/News/delete/{id}");
		if (response.IsSuccessStatusCode)
		{
			await Task.Delay(2000); // Optionally, navigate or refresh the list after deletion
			Navigation.NavigateTo("/News", true); // Forces reload
		}
		else
		{
			Console.WriteLine("Failed to delete the news item.");
		}
	}

}
