@page "/"
@rendermode InteractiveServer
@using NewsPortal.Application
@using NewsPortal.Entity
@using NewsPortal.DTOs
@inject HttpClient Http
@inject NavigationManager Navigation
@inject AppState AppState

<PageTitle>Login</PageTitle>

<EditForm Model="@login" OnValidSubmit="HandleLogin">
    <div class="container d-flex justify-content-center align-items-center" style="min-height: 100vh;">
        <div class="card shadow-lg border-0 rounded-4 p-4" style="max-width: 420px; width: 100%;">
            <div class="text-center mb-4">
                <i class="bi bi-person-circle text-primary" style="font-size: 3rem;"></i>
                <h3 class="fw-bold mt-2">Welcome</h3>
                <p class="text-muted mb-0">Login to manage your news content</p>
            </div>

            <div class="form-group mb-3">
                <label for="email" class="form-label"><b>Email</b></label>
                <InputText id="email" @bind-Value="login.Email" class="form-control" placeholder="Enter your email" />
            </div>

            <div class="form-group mb-3">
                <label for="password" class="form-label"><b>Password</b></label>
                <InputText id="password" @bind-Value="login.Password" type="password" class="form-control" placeholder="Enter your password" />
            </div>

            <button type="submit" class="btn btn-primary w-100" disabled="@IsLoggingIn">
                @if (IsLoggingIn)
                {
                    <span>
                        <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                        Logging in...
                    </span>
                }
                else
                {
                    <span>Login</span>
                }
            </button>

            @if (!string.IsNullOrEmpty(Message))
            {
                <div class="alert alert-danger mt-3 text-center" role="alert">
                    @Message
                </div>
            }

            <div class="text-center mt-3">
                <small class="text-muted">Don't have an account? <a href="/Register">Register here</a></small>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private LoginDtos login = new();
    private string Message;

    private bool IsLoggingIn = false;


    private async Task HandleLogin()
    {

        IsLoggingIn = true; // Start spinner as soon as login starts
        Message = string.Empty;

        try
        {
            var res = await Http.PostAsJsonAsync("api/Login/loginUser", login);

            if (res.IsSuccessStatusCode)
            {
                var user = await res.Content.ReadFromJsonAsync<RegisterUser>();

                // AppState.Login(login.Email);
                AppState.Login(user);
                await Task.Delay(2000);      // Optional delay for UX
                Navigation.NavigateTo("/home");  // Redirect after login
            }
            else
            {
                var error = await res.Content.ReadAsStringAsync();
                Message = error;
            }
        }
        catch (Exception ex)
        {
            Message = $"Something went wrong: {ex.Message}";
        }
        finally
        {
            IsLoggingIn = false; // Stop spinner whether login fails or succeeds
        }
        
    }

    
}
